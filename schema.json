{
  "$defs": {
    "component": {
      "type": "object",
      "properties": {
        "appKey": {
          "description": "The app key passed to `AppRegistry.registerComponent()`.",
          "type": "string"
        },
        "displayName": {
          "description": "Name to be displayed on home screen.",
          "type": "string"
        },
        "initialProperties": {
          "description": "Properties that should be passed to your component.",
          "type": "object"
        },
        "presentationStyle": {
          "description": "The style in which to present your component.",
          "type": "string",
          "enum": ["default", "modal"]
        },
        "slug": {
          "description": "URL slug that uniquely identifies this component. Used for deep linking.",
          "type": "string"
        }
      },
      "required": ["appKey"]
    },
    "manifest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "bundleRoot": {
          "description": "Specifies the root of the bundle file name. E.g., if the bundle file is `index.[platform].bundle`, `index` is the bundle root.\n\nDefaults to `index` and `main`.\n\nWhen set, the test app will look for the following files on startup:\n\n- `myRoot.[platform].jsbundle`\n- `myRoot.[platform].bundle`\n- `myRoot.native.jsbundle`\n- `myRoot.native.bundle`\n- `myRoot.jsbundle`\n- `myRoot.bundle`\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.0'>0.9.0</a>.",
          "type": "string"
        },
        "singleApp": {
          "description": "In single-app mode, the component with the specified slug gets launched automatically, essentially behaving as a normal app.\n\nDefaults to multi-app mode.\n\nFor more details, see [its dedicated page](Single-app-Mode).\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/1.3.0'>1.3.0</a>.",
          "type": "string"
        },
        "components": {
          "description": "All components that should be accessible from the home screen should be declared under this property. Each component must have `appKey` set, i.e. the name that you passed to `AppRegistry.registerComponent`.\n\n```javascript\nAppRegistry.registerComponent('Example', () => Example);\n```\n\nFor each entry, you can declare additional (optional) properties:\n\n```javascript\n{\n  \"components\": [\n    {\n      // The app key passed to `AppRegistry.registerComponent()`\n      \"appKey\": \"Example\",\n\n      // [Optional] Name to be displayed on home screen\n      \"displayName\": \"App\",\n\n      // [Optional] Properties that should be passed to your component\n      \"initialProperties\": {},\n\n      // [Optional] The style in which to present your component.\n      // Valid values are: \"modal\"\n      \"presentationStyle\": \"\",\n\n      // [Optional] URL slug that uniquely identifies this component.\n      // Used for deep linking.\n      \"slug\": \"\"\n    }\n  ]\n}\n```\n\n<a name='android-adding-fragments' />\n\n#### [Android] Adding Fragments\n\nOn Android, you can add fragments to the home screen by using their fully qualified class names, e.g. `com.example.app.MyFragment`, as app key:\n\n```javascript\n\"components\": [\n  {\n    \"appKey\": \"com.example.app.MyFragment\",\n    \"displayName\": \"App\"\n  }\n]\n```\n\nIf you need to get the `ReactNativeHost` instance within `MyFragment`, you can request it as a service from the context:\n\n```java\n@Override\n@SuppressLint(\"WrongConstant\")\npublic void onAttach(@NonNull Context context) {\n    super.onAttach(context);\n\n    ReactNativeHost reactNativeHost = (ReactNativeHost)\n        context.getSystemService(\"service:reactNativeHostService\");\n    ReactInstanceManager reactInstanceManager =\n        reactNativeHost.getReactInstanceManager();\n}\n```\n\n<a name='ios-macos-adding-view-controllers' />\n\n#### [iOS, macOS] Adding View Controllers\n\nOn iOS/macOS, you can have native view controllers on the home screen by using their Objective-C names as app key (Swift classes can declare Objective-C names with the <a href='https://docs.swift.org/swift-book/ReferenceManual/Attributes.html#objc'>`@objc`</a> attribute):\n\n```javascript\n\"components\": [\n  {\n    \"appKey\": \"RTAMyViewController\",\n    \"displayName\": \"App\"\n  }\n]\n```\n\nThe view controller must implement an initializer that accepts a `RCTBridge` instance:\n\n```objc\n- (nonnull instancetype)initWithBridge:(nonnull RCTBridge *)bridge;\n```",
          "type": "array",
          "items": { "$ref": "#/$defs/component" }
        }
      },
      "required": ["name", "displayName"]
    },
    "signingConfig": {
      "type": "object",
      "properties": {
        "keyAlias": {
          "description": "Use this property to specify the alias of key to use in the store",
          "type": "string"
        },
        "keyPassword": {
          "description": "Use this property to specify the password of key in the store",
          "type": "string"
        },
        "storeFile": {
          "description": "Use this property to specify the relative file path to the key store file",
          "type": "string"
        },
        "storePassword": {
          "description": "Use this property to specify the password of the key store",
          "type": "string"
        }
      },
      "required": ["storeFile"],
      "exclude-from-codegen": true
    }
  },
  "allOf": [{ "$ref": "#/$defs/manifest" }],
  "type": "object",
  "properties": {
    "resources": {
      "description": "Here you should declare all resources that should be bundled with the app. The property can be a list of paths to resources:\n\n```javascript\n\"resources\": [\n  \"dist/assets\",\n  \"dist/main.jsbundle\"\n]\n```\n\nOr you can declare platform specific resources using platform names as key:\n\n```javascript\n\"resources\": {\n  \"android\": [\n    \"dist/res\",\n    \"dist/main.android.jsbundle\"\n  ],\n  \"ios\": [\n    \"dist/assets\",\n    \"dist/main.ios.jsbundle\"\n  ],\n  \"macos\": [\n    \"dist/assets\",\n    \"dist/main.macos.jsbundle\"\n  ],\n  \"windows\": [\n    \"dist/assets\",\n    \"dist/main.windows.bundle\"\n  ]\n}\n```\n\nA path must be relative to the path of `app.json`, and can point to both a file or a directory.",
      "oneOf": [
        {
          "type": "array",
          "items": { "type": "string" },
          "uniqueItems": true
        },
        {
          "type": "object",
          "properties": {
            "android": {
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            },
            "ios": {
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            },
            "macos": {
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            },
            "windows": {
              "type": "array",
              "items": { "type": "string" },
              "uniqueItems": true
            }
          }
        }
      ]
    },
    "android": {
      "description": "Android specific properties go here.",
      "type": "object",
      "properties": {
        "package": {
          "description": "Use this property to set the <a href='https://developer.android.com/studio/build/application-id'>application ID</a> of the APK. The value is set to `applicationId` in `build.gradle`.",
          "type": "string"
        },
        "signingConfigs": {
          "description": "Use this to set the <a href='https://developer.android.com/studio/publish/app-signing'>signing configurations</a> for the app.\n\nThe JSON schema follows the Gradle DSL very closely. Below is what one would add for the debug and release flavors:\n\n```javascript\n{\n  \"android\": {\n    \"signingConfigs\": {\n      \"debug\": {                          // optional\n        \"keyAlias\": \"androiddebugkey\",    // defaults to \"androiddebugkey\"\n        \"keyPassword\": \"android\",         // defaults to \"android\n        \"storeFile\": \"debug.keystore\",    // required\n        \"storePassword\": \"android\"        // defaults to \"android\n      },\n      \"release\": {                        // optional\n        \"keyAlias\": \"androiddebugkey\",    // defaults to \"androiddebugkey\"\n        \"keyPassword\": \"android\",         // defaults to \"android\n        \"storeFile\": \"release.keystore\",  // required\n        \"storePassword\": \"android\"        // defaults to \"android\n      }\n    }\n  }\n}\n```\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.11.0'>0.11.0</a>.",
          "type": "object",
          "properties": {
            "debug": {
              "description": "Use this property for the debug signing config for the app. The value `storeFile` is required. Android defaults will be provided for other properties.",
              "allOf": [{ "$ref": "#/$defs/signingConfig" }],
              "type": "object"
            },
            "release": {
              "description": "Use this property for the release signing config for the app. The value `storeFile` is required. Android defaults will be provided for other properties.",
              "allOf": [{ "$ref": "#/$defs/signingConfig" }],
              "type": "object"
            }
          }
        }
      }
    },
    "ios": {
      "description": "iOS specific properties go here.",
      "type": "object",
      "properties": {
        "bundleIdentifier": {
          "description": "Use this property to set the bundle identifier of the final app bundle. This is the same as setting `PRODUCT_BUNDLE_IDENTIFIER` in Xcode.",
          "type": "string"
        },
        "codeSignEntitlements": {
          "description": "Specifies the path to a custom <a href='https://developer.apple.com/documentation/bundleresources/entitlements'>Entitlements</a> file. The path should be relative to `app.json`. This is the same as setting `CODE_SIGN_ENTITLEMENTS` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "codeSignIdentity": {
          "description": "Sets the <a href='https://developer.apple.com/library/archive/documentation/Security/Conceptual/CodeSigningGuide/Procedures/Procedures.html#//apple_ref/doc/uid/TP40005929-CH4-SW1'>code signing identity</a> to use when signing code. This is the same as setting `CODE_SIGN_IDENTITY` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "developmentTeam": {
          "description": "Sets the <a href='https://help.apple.com/xcode/mac/current/#/dev23aab79b4'>development team</a> that the app should be assigned to. This is the same as setting `DEVELOPMENT_TEAM` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "reactNativePath": {
          "description": "Sets a custom path to React Native. Useful for when `require(\"react-native\")` does not return the desired path.",
          "type": "string"
        }
      }
    },
    "macos": {
      "description": "macOS specific properties go here.",
      "type": "object",
      "properties": {
        "bundleIdentifier": {
          "description": "Use this property to set the bundle identifier of the final app bundle. This is the same as setting `PRODUCT_BUNDLE_IDENTIFIER` in Xcode.",
          "type": "string"
        },
        "codeSignEntitlements": {
          "description": "Specifies the path to a custom <a href='https://developer.apple.com/documentation/bundleresources/entitlements'>Entitlements</a> file. The path should be relative to `app.json`. This is the same as setting `CODE_SIGN_ENTITLEMENTS` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "codeSignIdentity": {
          "description": "Sets the <a href='https://developer.apple.com/library/archive/documentation/Security/Conceptual/CodeSigningGuide/Procedures/Procedures.html#//apple_ref/doc/uid/TP40005929-CH4-SW1'>code signing identity</a> to use when signing code. This is the same as setting `CODE_SIGN_IDENTITY` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "developmentTeam": {
          "description": "Sets the <a href='https://help.apple.com/xcode/mac/current/#/dev23aab79b4'>development team</a> that the app should be assigned to. This is the same as setting `DEVELOPMENT_TEAM` in Xcode.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.9.7'>0.9.7</a>.",
          "type": "string"
        },
        "reactNativePath": {
          "description": "Sets a custom path to React Native for macOS. Useful for when `require(\"react-native-macos\")` does not return the desired path.",
          "type": "string"
        }
      }
    },
    "windows": {
      "description": "Windows specific properties go here.",
      "type": "object",
      "properties": {
        "appxManifest": {
          "description": "Sets the path to your <a href='https://docs.microsoft.com/en-us/uwp/schemas/appxpackage/appx-package-manifest'>app package manifest</a>. If none is set, a default manifest will be provided. Changes to this property will not be automatically be picked up; you need to re-run `npx install-windows-test-app` to update the solution.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/0.5.5'>0.5.5</a>.",
          "type": "string"
        },
        "certificateKeyFile": {
          "description": "The path to the certificate to use. If specified, it will also enable package signing. Changes to this property will not be automatically be picked up; you need to re-run `npx install-windows-test-app` to update the solution.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/1.1.0'>1.1.0</a>.",
          "type": "string"
        },
        "certificatePassword": {
          "description": "The password for the private key in the certificate. Leave unset if no password. Changes to this property will not be automatically be picked up; you need to re-run `npx install-windows-test-app` to update the solution.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/1.1.0'>1.1.0</a>.",
          "type": "string"
        },
        "certificateThumbprint": {
          "description": "This value must match the thumbprint in the signing certificate, or be unset. Changes to this property will not be automatically be picked up; you need to re-run `npx install-windows-test-app` to update the solution.\n\nIntroduced in <a href='//github.com/microsoft/react-native-test-app/releases/tag/1.1.0'>1.1.0</a>.",
          "type": "string"
        }
      }
    }
  }
}
