// `react-native run-android` is hard-coded to look for the output APK at a very
// specific location. See
// https://github.com/react-native-community/cli/blob/6cf12b00c02aca6d4bc843446394331d71a9749e/packages/platform-android/src/commands/runAndroid/index.ts#L180
buildDir = "$rootDir/$name/build"

def reactNativeDir = findNodeModulesPath(rootDir, "react-native")
def hermesEngineDir =
    findNodeModulesPath(file(reactNativeDir), "hermes-engine")
        ?: findNodeModulesPath(file(reactNativeDir), "hermesvm")
def hermesAndroidDir = "$hermesEngineDir/android"

buildscript {
    def androidDir = "${buildscript.sourceFile.getParent()}/../"
    apply from: "$androidDir/test-app-util.gradle"
    apply from: "$androidDir/dependencies.gradle"

    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    maven {
        url("${reactNativeDir}/android")
    }

    google()
    jcenter()
}

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

def testAppDir = file("$projectDir/../../")

apply from: file("${testAppDir}/test-app.gradle")
applyTestAppModule(project, "com.microsoft.reacttestapp")

project.ext.react = [
    appName      : getAppName(),
    applicationId: getApplicationId(),
    enableFlipper: getFlipperVersion(rootDir),
    enableHermes : true,
]

android {
    compileSdkVersion sdk.version
    buildToolsVersion sdk.buildToolsVersion

    // TODO: Remove this block when minSdkVersion >= 24. See
    // https://stackoverflow.com/q/53402639 for details.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        allWarningsAsErrors = true
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId project.ext.react.applicationId
        minSdkVersion sdk.minVersion
        targetSdkVersion sdk.version
        versionCode rntaVersion.code
        versionName rntaVersion.label

        resValue "string", "app_name", project.ext.react.appName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/x86/libc++_shared.so"
    }

    sourceSets {
        if (project.ext.react.enableFlipper) {
            debug.java.srcDirs += 'src/flipper/java'
        }
    }
}

dependencies {
    implementation project(":support")

    implementation "com.google.dagger:dagger:2.28.3"
    implementation "com.google.dagger:dagger-android:2.28.3"
    implementation "com.google.dagger:dagger-android-support:2.28.3"

    kapt("com.google.dagger:dagger-compiler:2.28.3")
    kapt("com.google.dagger:dagger-android-processor:2.28.3")

    releaseImplementation files("$hermesAndroidDir/hermes-release.aar")
    debugImplementation files("$hermesAndroidDir/hermes-debug.aar")

    if (buildReactNativeFromSource(rootDir)) {
        implementation project(':ReactAndroid')
    } else {
        implementation "com.facebook.react:react-native:+"
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:1.2.0"
    implementation "androidx.core:core-ktx:1.3.2"
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
    implementation "com.google.android.material:material:1.2.1"

    implementation("com.squareup.moshi:moshi-kotlin:1.11.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.11.0")

    testImplementation "junit:junit:4.13.1"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"

    if (project.ext.react.enableFlipper) {
        def flipperVersion = project.ext.react.enableFlipper
        debugImplementation("com.facebook.flipper:flipper:${flipperVersion}") {
            exclude group: 'com.facebook.fbjni'
        }
        debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${flipperVersion}") {
            exclude group: 'com.facebook.flipper'
        }
        debugImplementation("com.facebook.flipper:flipper-network-plugin:${flipperVersion}") {
            exclude group: 'com.facebook.flipper'
        }
    }
}
