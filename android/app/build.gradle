// `react-native run-android` is hard-coded to look for the output APK at a very
// specific location. See
// https://github.com/react-native-community/cli/blob/6cf12b00c02aca6d4bc843446394331d71a9749e/packages/platform-android/src/commands/runAndroid/index.ts#L180
buildDir = "$rootDir/$name/build"

def reactNativeDir = findNodeModulesPath(rootDir, "react-native")
def hermesEngineDir =
    findNodeModulesPath(file(reactNativeDir), "hermes-engine")
        ?: findNodeModulesPath(file(reactNativeDir), "hermesvm")
def hermesAndroidDir = "$hermesEngineDir/android"

buildscript {
    def androidDir = "${buildscript.sourceFile.getParent()}/../"
    apply from: "$androidDir/test-app-util.gradle"
    apply from: "$androidDir/dependencies.gradle"

    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}

repositories {
    maven {
        url("${reactNativeDir}/android")
    }

    google()
    mavenCentral()

    // TODO: Remove these when they've been published to Maven Central.
    // See https://github.com/microsoft/react-native-test-app/issues/305
    jcenter() {
        content {
            includeGroup("com.facebook.fbjni")
            includeGroup("com.facebook.flipper")
            includeGroup("com.facebook.fresco")
            includeGroup("com.facebook.yoga")
        }
    }
}

apply from: "$projectDir/../force-resolve-trove4j.gradle"

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"

def testAppDir = file("$projectDir/../../")

apply from: file("${testAppDir}/test-app.gradle")
applyTestAppModule(project)

project.ext.react = [
    appName      : getAppName(),
    applicationId: getApplicationId(),
    enableFlipper: getFlipperVersion(rootDir),
    enableHermes : true,
]

android {
    compileSdkVersion sdk.version
    buildToolsVersion sdk.buildToolsVersion

    // We need only set `ndkVersion` when building react-native from source.
    if (hasProperty("ANDROID_NDK_VERSION")) {
        ndkVersion ANDROID_NDK_VERSION
    }

    // TODO: Remove this block when minSdkVersion >= 24. See
    // https://stackoverflow.com/q/53402639 for details.
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        allWarningsAsErrors = true
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId project.ext.react.applicationId
        minSdkVersion sdk.minVersion
        targetSdkVersion sdk.version
        versionCode reactTestApp.versionCode
        versionName reactTestApp.versionName

        resValue "string", "app_name", project.ext.react.appName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/x86/libc++_shared.so"
    }

    sourceSets {
        if (project.ext.react.enableFlipper) {
            debug.java.srcDirs += 'src/flipper/java'
        }
    }
}

dependencies {
    implementation project(":support")

    releaseImplementation files("$hermesAndroidDir/hermes-release.aar")
    debugImplementation files("$hermesAndroidDir/hermes-debug.aar")

    if (buildReactNativeFromSource(rootDir)) {
        implementation project(':ReactAndroid')
    } else {
        implementation "com.facebook.react:react-native:+"
    }

    implementation libraries.kotlinStdlibJdk7
    implementation libraries.androidAppCompat
    implementation libraries.androidCoreKotlinExtensions
    implementation libraries.androidRecyclerView
    implementation libraries.androidSwipeRefreshLayout
    implementation libraries.materialComponents

    implementation libraries.moshiKotlin
    kapt libraries.moshiKotlinCodegen

    testImplementation libraries.junit
    androidTestImplementation libraries.androidJUnit
    androidTestImplementation libraries.androidEspressoCore

    if (project.ext.react.enableFlipper) {
        def flipperVersion = project.ext.react.enableFlipper
        debugImplementation("com.facebook.flipper:flipper:${flipperVersion}") {
            exclude group: 'com.facebook.fbjni'
        }
        debugImplementation("com.facebook.flipper:flipper-fresco-plugin:${flipperVersion}") {
            exclude group: 'com.facebook.flipper'
        }
        debugImplementation("com.facebook.flipper:flipper-network-plugin:${flipperVersion}") {
            exclude group: 'com.facebook.flipper'
        }
    }
}
