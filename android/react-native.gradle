ext.rnta_react_native_gradle = true

if (!hasProperty("rnta_node_gradle")) {
    apply(from: "${buildscript.sourceFile.getParent()}/node.gradle")
}

ext.isBridgelessEnabled = { Project project, boolean isNewArchEnabled ->
    if (isNewArchEnabled) {
        def bridgelessEnabled = project.findProperty("react.bridgelessEnabled")
                                    ?: project.findProperty("bridgelessEnabled")
        if (bridgelessEnabled != "false") {
            def version = getPackageVersionNumber("react-native", project.rootDir)
            def isSupported = version == 0 || version >= v(0, 73, 0)

            if (bridgelessEnabled == "true") {
                if (!isSupported) {
                    logger.warn([
                        "WARNING: react-native 0.73 or greater is required for",
                        "Bridgeless Mode — disable `bridgelessEnabled` in your",
                        "`gradle.properties` or upgrade `react-native`"
                    ].join(" "))
                }
                return isSupported
            }

            // https://github.com/facebook/react-native/commit/fe337f25be65b67dc3d8d99d26a61ffd26985dd8
            def isEnabledByDefault = version == 0 || version >= v(0, 74, 0)
            return isSupported && isEnabledByDefault
        }
    }
    return false
}

ext.isFabricEnabled = { Project project ->
    return isNewArchitectureEnabled(project)
}

ext.isNewArchitectureEnabled = { Project project ->
    def newArchEnabled = project.findProperty("react.newArchEnabled")
                             ?: project.findProperty("newArchEnabled")
    if (newArchEnabled == "true") {
        def version = getPackageVersionNumber("react-native", project.rootDir)
        def isSupported = version == 0 || version >= v(0, 71, 0)
        if (!isSupported) {
            throw new GradleException([
                "react-native 0.71 or greater is required for New Architecture",
                "— disable `newArchEnabled` in your `gradle.properties` or",
                "upgrade `react-native`"
            ].join(" "))
        }
        return isSupported
    }
    return false
}
