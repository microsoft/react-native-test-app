name: build
on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    # nightly builds against react-native@nightly at 4:00
    - cron: 0 4 * * *
jobs:
  lint-commit:
    name: "lint commit message"
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: Install
        run: |
          yarn ci
      - name: Lint commit message
        run: |
          yarn lint:commit
  lint-test:
    name: "lint + test"
    runs-on: macos-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 64
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: Install
        run: |
          yarn ci
      - name: ClangFormat
        if: ${{ github.event_name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # TODO: GITHUB_TOKEN is not set if a PR comes from a forked repo.
          #       Ignore errors until we can create a GitHub PAT from a system
          #       account.
          scripts/clang-format-diff.sh || true
      - name: CocoaPods
        run: |
          bundle install
          echo "::add-matcher::.github/rubocop.json"
          bundle exec rubocop
          echo "::remove-matcher owner=rubocop::"
          echo "::add-matcher::.github/minitest.json"
          bundle exec ruby -Ilib:test test/test_test_app.rb
          echo "::remove-matcher owner=minitest::"
      - name: JavaScript
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # TODO: GITHUB_TOKEN is not set if a PR comes from a forked repo.
          #       Ignore errors until we can create a GitHub PAT from a system
          #       account.
          scripts/prettier-diff.js $(git ls-files '*.js' '*.yml' 'test/**/*.json') || true
          echo "::add-matcher::.github/eslint-stylish.json"
          yarn lint:js
          echo "::remove-matcher owner=eslint-stylish::"
          yarn tsc
          yarn test:js --ci
      - name: ktlint
        run: |
          brew install ktlint
          echo "::add-matcher::.github/ktlint.json"
          yarn lint:kt
          echo "::remove-matcher owner=ktlint::"
      - name: SwiftFormat
        run: |
          brew install swiftformat
          echo "::add-matcher::.github/swiftformat.json"
          yarn format:swift --lint
          echo "::remove-matcher owner=swiftformat::"
      - name: SwiftLint
        run: |
          echo "::add-matcher::.github/swiftlint.json"
          swiftlint
          echo "::remove-matcher owner=swiftlint::"
  ios:
    name: "iOS"
    runs-on: macos-latest
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: example/.yarn-offline-mirror
          key: ${{ hashFiles('example/yarn.lock') }}
      - name: Set up react-native@nightly
        if: ${{ github.event_name == 'schedule' }}
        run: |
          # `nightly` currently doesn't build due to use of version numbers that
          # are incompatible with CocoaPods. See
          # https://github.com/facebook/react-native/issues/30036 and
          # https://github.com/microsoft/react-native-macos/issues/620 for more
          # details.
          yarn set-react-version master
      - name: Install
        run: |
          yarn ci
        working-directory: example
      - name: Build
        run: |
          set -eo pipefail
          yarn build:ios || yarn build:ios
          pod install --project-directory=ios
          ../scripts/xcodebuild.sh ios/Example.xcworkspace build-for-testing
        working-directory: example
      - name: Test
        run: |
          ../scripts/xcodebuild.sh ios/Example.xcworkspace test-without-building
        working-directory: example
  ios-template:
    name: "iOS [template]"
    strategy:
      matrix:
        template: [all, ios]
    runs-on: macos-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: npm pack
        run: |
          npm pack
        shell: bash
      - name: Cache /template-example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: |
            template-example/.yarn-offline-mirror
            template-example/yarn.lock
          key: ${{ matrix.template }}-${{ hashFiles('react-native-test-app-0.0.1-dev.tgz') }}
      - name: Install
        run: |
          scripts/install-test-template.sh ${{ matrix.template }}
      - name: Build
        run: |
          set -eo pipefail
          yarn build:ios || yarn build:ios
          if [[ ${{ matrix.template }} == ios ]]; then
            pod install
            ../scripts/xcodebuild.sh TemplateExample.xcworkspace build
          else
            pod install --project-directory=ios
            ../scripts/xcodebuild.sh ios/TemplateExample.xcworkspace build
          fi
        working-directory: template-example
  android:
    name: "Android"
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Cache /example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: example/.yarn-offline-mirror
          key: ${{ hashFiles('example/yarn.lock') }}
      - name: Set up react-native@nightly
        if: ${{ github.event_name == 'schedule' }}
        run: |
          yarn set-react-version nightly
        shell: bash
      - name: Install /example
        run: |
          yarn ci
        working-directory: example
      - name: Build
        run: |
          set -eo pipefail
          yarn build:android || yarn build:android
          pushd android 1> /dev/null
          ./gradlew clean build check test
        shell: bash
        working-directory: example
      - name: Cache /.yarn-offline-mirror
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: Install /
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          yarn ci
      - name: Run instrumented tests
        if: ${{ matrix.os == 'macos-latest' }}
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: cd android/ && ./gradlew clean build connectedCheck
          arch: x86_64
  android-template:
    name: "Android [template]"
    strategy:
      matrix:
        template: [all, android]
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: npm pack
        run: |
          npm pack
        shell: bash
      - name: Cache /template-example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: |
            template-example/.yarn-offline-mirror
            template-example/yarn.lock
          key: ${{ matrix.template }}-${{ hashFiles('react-native-test-app-0.0.1-dev.tgz') }}
      - name: Install
        run: |
          scripts/install-test-template.sh ${{ matrix.template }}
        shell: bash
      - name: Build
        run: |
          set -eo pipefail
          yarn build:android || yarn build:android
          [[ -d android ]] && pushd android 1> /dev/null
          ./gradlew clean build check test
        shell: bash
        working-directory: template-example
  macos:
    name: "macOS"
    runs-on: macos-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: example/.yarn-offline-mirror
          key: ${{ hashFiles('example/yarn.lock') }}
      - name: Install
        run: |
          yarn ci
        working-directory: example
      - name: Build
        run: |
          set -eo pipefail
          yarn build:macos || yarn build:macos
          pod install --project-directory=macos
          ../scripts/xcodebuild.sh macos/Example.xcworkspace build-for-testing
        working-directory: example
      - name: Test
        run: |
          ../scripts/xcodebuild.sh macos/Example.xcworkspace test-without-building
        working-directory: example
      - name: Build ARM
        run: |
          set -eo pipefail
          ../scripts/xcodebuild.sh macos/Example.xcworkspace clean
          ../scripts/xcodebuild.sh macos/Example.xcworkspace build ARCHS=arm64
        working-directory: example
  macos-template:
    name: "macOS [template]"
    strategy:
      matrix:
        template: [all, macos]
    runs-on: macos-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: npm pack
        run: |
          npm pack
        shell: bash
      - name: Cache /template-example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: |
            template-example/.yarn-offline-mirror
            template-example/yarn.lock
          key: ${{ matrix.template }}-${{ hashFiles('react-native-test-app-0.0.1-dev.tgz') }}
      - name: Install
        run: |
          scripts/install-test-template.sh ${{ matrix.template }}
      - name: Build
        run: |
          set -eo pipefail
          yarn build:macos || yarn build:macos
          if [[ ${{ matrix.template }} == macos ]]; then
            pod install
            ../scripts/xcodebuild.sh TemplateExample.xcworkspace build
          else
            pod install --project-directory=macos
            ../scripts/xcodebuild.sh macos/TemplateExample.xcworkspace build
          fi
        working-directory: template-example
  windows:
    name: "Windows"
    runs-on: windows-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        platform: [ARM, x64]
        configuration: [Debug, Release]
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Set up VSTest.console.exe
        uses: darenm/Setup-VSTest@v1
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: example/.yarn-offline-mirror
          key: ${{ hashFiles('example/yarn.lock') }}
      - name: Install
        run: |
          yarn ci
        working-directory: example
      - name: Build bundle and create solution
        run: |
          yarn build:windows
          yarn install-windows-test-app
        working-directory: example
      - name: Install NuGet packages
        run: |
          nuget restore
        working-directory: example/windows
      - name: Build
        run: |
          MSBuild Example.sln -t:Rebuild -p:Configuration=${{ matrix.configuration }} -p:Platform=${{ matrix.platform }}
        working-directory: example/windows
      - name: Test
        run: |
          MSBuild ReactTestAppTests.vcxproj -t:Build -p:Configuration=${{ matrix.configuration }} -p:Platform=${{ matrix.platform }}
          if ("${{ matrix.platform }}" -eq "x64") { VSTest.Console.exe ${{ matrix.platform }}\${{ matrix.configuration }}\ReactTestAppTests.dll }
        working-directory: example/windows/ReactTestAppTests
  windows-template:
    name: "Windows [template]"
    runs-on: windows-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    strategy:
      matrix:
        template: [all, windows]
    steps:
      - name: Set up MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: npm pack
        run: |
          npm pack
        shell: bash
      - name: Cache /template-example/.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: |
            template-example/.yarn-offline-mirror
            template-example/yarn.lock
          key: ${{ matrix.template }}-${{ hashFiles('react-native-test-app-0.0.1-dev.tgz') }}
      - name: Install
        run: |
          scripts/install-test-template.sh ${{ matrix.template }}
        shell: bash
      - name: Build bundle and create solution
        run: |
          yarn build:windows
          if ("${{ matrix.template }}" -eq "all") { yarn install-windows-test-app }
          else { yarn install-windows-test-app --projectDirectory=. }
        working-directory: template-example
      - name: Install NuGet packages
        run: |
          if ("${{ matrix.template }}" -eq "all") { cd windows }
          nuget restore
        working-directory: template-example
      - name: Build
        run: |
          if ("${{ matrix.template }}" -eq "all") { MSBuild windows/TemplateExample.sln -t:Rebuild -p:Platform=x64 }
          else { MSBuild TemplateExample.sln -t:Rebuild -p:Platform=x64 }
        working-directory: template-example
  release:
    needs:
      [
        lint-test,
        ios,
        ios-template,
        android,
        android-template,
        macos,
        macos-template,
        windows,
        windows-template,
      ]
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' && !contains(github.event.head_commit.message, '[skip ci]') }}
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache /.yarn-offline-mirror
        uses: actions/cache@v2
        with:
          path: .yarn-offline-mirror
          key: ${{ hashFiles('yarn.lock') }}
      - name: Install
        run: |
          yarn ci
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npx semantic-release
