name: build
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  lint-test:
    name: "lint + test"
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: CocoaPods
        run: |
          bundle install
          echo "::add-matcher::.github/rubocop.json"
          bundle exec rubocop
          echo "::remove-matcher owner=rubocop::"
          echo "::add-matcher::.github/minitest.json"
          bundle exec ruby -Ilib:test test/test_test_app.rb
          echo "::remove-matcher owner=minitest::"
      - name: JavaScript
        run: |
          yarn
          echo "::add-matcher::.github/eslint-stylish.json"
          yarn lint:js
          echo "::remove-matcher owner=eslint-stylish::"
  ios:
    name: "iOS"
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: |
          yarn
        working-directory: example
      - name: Build
        run: |
          set -eo pipefail
          yarn build:ios
          pod install --project-directory=ios
          ../scripts/xcodebuild.sh ios/Example.xcworkspace build-for-testing
        working-directory: example
      - name: Test
        run: |
          ../scripts/xcodebuild.sh ios/Example.xcworkspace test-without-building
        working-directory: example
  ios-template:
    name: "iOS [template]"
    strategy:
      matrix:
        template: [all, ios]
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: scripts/install-test-template.sh ${{ matrix.template }}
      - name: Build
        run: |
          set -eo pipefail
          yarn build:ios
          if [[ ${{ matrix.template }} == ios ]]; then
            pod install
            ../scripts/xcodebuild.sh TemplateExample.xcworkspace build
          else
            pod install --project-directory=ios
            ../scripts/xcodebuild.sh ios/TemplateExample.xcworkspace build
          fi
        working-directory: template-example
  android:
    name: "Android"
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          # Node has a bug where it crashes compiling a regular
          # expression of react-native cli. Using a specific
          # Node version helps to workaround this problem:
          # https://github.com/facebook/react-native/issues/26598
          node-version: 12.9.1
      - name: Install
        run: |
          yarn
        working-directory: example
      - name: Build
        shell: bash
        run: |
          set -eo pipefail
          yarn build:android
          pushd android 1> /dev/null
          ./gradlew clean build check test
        working-directory: example
  android-template:
    name: "Android [template]"
    strategy:
      matrix:
        template: [all, android]
        os: [macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          # Node has a bug where it crashes compiling a regular
          # expression of react-native cli. Using a specific
          # Node version helps to workaround this problem:
          # https://github.com/facebook/react-native/issues/26598
          node-version: 12.9.1
      - name: Install
        run: scripts/install-test-template.sh ${{ matrix.template }}
        shell: bash
      - name: Build
        run: |
          set -eo pipefail
          yarn build:android
          [[ -d android ]] && pushd android 1> /dev/null
          ./gradlew clean build check test
        shell: bash
        working-directory: template-example
  macos:
    name: "macOS"
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: |
          yarn
        working-directory: example
      - name: Build
        run: |
          set -eo pipefail
          yarn build:macos
          pod install --project-directory=macos
          ../scripts/xcodebuild.sh macos/Example.xcworkspace build
        working-directory: example
  macos-template:
    name: "macOS [template]"
    strategy:
      matrix:
        template: [all, macos]
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install
        run: scripts/install-test-template.sh ${{ matrix.template }}
      - name: Build
        run: |
          set -eo pipefail
          yarn build:macos
          if [[ ${{ matrix.template }} == macos ]]; then
            pod install
            ../scripts/xcodebuild.sh TemplateExample.xcworkspace build
          else
            pod install --project-directory=macos
            ../scripts/xcodebuild.sh macos/TemplateExample.xcworkspace build
          fi
        working-directory: template-example
  release:
    needs:
      [
        lint-test,
        ios,
        ios-template,
        android,
        android-template,
        macos,
        macos-template,
      ]
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install
        run: |
          yarn
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npx semantic-release
